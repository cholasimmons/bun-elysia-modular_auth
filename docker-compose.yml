name: 'elysia_auth'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
      labels:
        - studio.simmons=simmonsstudiozm/elysia-auth:slim
    privileged: true
    depends_on:
      - db
      - cache
      - store
    environment:
      - NODE_ENV=production
      - MAINTENANCE_MODE=false
      - PORT=3000
      - HOST=api
      - TZ=Africa/Harare
      - JWSCRT=simplytestingelysiasjwtprod
      - RESEND_API_KEY=re_1234
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_NAME=authdb
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/authdb?schema=public
      - MINIO_HOST=store
      - MINIO_PORT=9000
      - MINIO_ROOT_USER=Rosetta
      - MINIO_ROOT_PASSWORD=Rosetta2022
      - BUCKET_USERPHOTOS=users
      - BUCKET_PRODUCTSPHOTOS=products
      - IMAGE_QUALITY=78
      - THUMBNAIL_QUALITY=48
      - REDIS_HOST=cache
      - REDIS_PORT=6379
      - REDIS_PASSWORD=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    #command: "/bin/sh -c 'sleep 10 && bun prisma:seed'"
    command: "/bin/sh -c 'bunx prisma migrate deploy'"
    volumes:
      - api_migration_one:/usr/src/app/prisma/migrations/0_init
    networks:
      default:
        aliases:
          - api
    ports: ["3000:3000"]
    restart: unless-stopped
    deploy:
      replicas: 1
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.api.rule=Host(`api.hello.simmons.studio`)'
        - 'traefik.http.services.api.loadbalancer.server.port=3000'
        - 'traefik.http.routers.api.entrypoints=websecure'
        - 'traefik.http.routers.api.tls=true'
        - 'traefik.http.routers.api.tls.certresolver=leresolver'

  db:
    image: postgres:16.3-bullseye
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_NAME=authdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready"]
    #   interval: 1m30s
    #   timeout: 30s
    #   retries: 5
    #   start_period: 30s
    networks:
      default:
        aliases:
          - db
    volumes:
      - pgdata:/var/lib/postgresql/data
      - api_migration_one:/docker-entrypoint-initdb.d:ro  # Mount SQL migrations directory as Read-only

  store:
    image: minio/minio:RELEASE.2024-06-11T03-13-30Z
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_HOST=store
      - MINIO_ROOT_USER=Rosetta
      - MINIO_ROOT_PASSWORD=Rosetta2022
    networks:
      default:
        aliases:
          - store
    command: server /data --console-address ":9001"
    volumes:
      #- /var/lib/docker/minio/data:/data
      - minio_data:/data
    deploy:
      replicas: 1
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.store.rule=Host(`store.hello.simmons.studio`)'
        - 'traefik.http.services.store.loadbalancer.server.port=9001'
        - 'traefik.http.routers.store.entrypoints=websecure'
        - 'traefik.http.routers.store.tls=true'
        - 'traefik.http.routers.store.tls.certresolver=leresolver'

  pgadmin:
    image: dpage/pgadmin4:8.8
    # container_name: pgadmin
    restart: unless-stopped
    depends_on:
      - db
    environment:
      - PGADMIN_DEFAULT_EMAIL=root@root.com
      - PGADMIN_DEFAULT_PASSWORD=root
    ports:
      - "8080:80"
    networks:
      default:
        aliases:
          - pgadmin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    deploy:
      replicas: 1
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.pgadmin.rule=Host(`pgadmin.hello.simmons.studio`)'
        - 'traefik.http.services.pgadmin.loadbalancer.server.port=8080'
        - 'traefik.http.routers.pgadmin.entrypoints=websecure'
        - 'traefik.http.routers.pgadmin.tls=true'
        - 'traefik.http.routers.pgadmin.tls.certresolver=leresolver'

  cache:
    image: redis:7.4.0-alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - cache_data:/data
      - /path/to/local/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_PASSWORD=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
      - REDIS_PORT=6379
      - REDIS_DATABASES=8
    networks:
      default:
        aliases:
          - cache
    command: redis-server --save 20 1 --loglevel warning
    deploy:
      replicas: 1
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.cache.rule=Host(`cache.hello.simmons.studio`)'
        - 'traefik.http.services.api.loadbalancer.server.port=6379'
        - 'traefik.http.routers.cache.entrypoints=websecure'
        - 'traefik.http.routers.cache.tls=true'
        - 'traefik.http.routers.cache.tls.certresolver=leresolver'
  redis_insight:
    image: redislabs/redisinsight:2.54.0
    container_name: redis_insight
    restart: always
    ports:
      - 8001:8001
    volumes:
      - redis_insight_volume_data:/db

# networks:
#   api_net:
#     driver: bridge
#     ipam:
#       config:
#         - subnet: 172.10.0.0/16

volumes:
  api_migration_one:
  pgdata:
  minio_data:
  pgadmin_data:
  cache_data:
  redis_insight_volume_data: