name: 'elysia_auth'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
      labels:
        - studio.simmons=simmonsstudiozm/elysia-auth:slim
    # image: simmonsstudiozm/elysia-auth:slim
    privileged: true
    depends_on:
      - db
    environment:
      - NODE_ENV=development
      - PORT=3000
      - HOST=api
      - TZ=Africa/Harare
      - JWTNAME=jwtAuth
      - JWSCRT=simplytestingelysiasjwt
      - RESEND_API_KEY=re_1234
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_NAME=authdb
      - DATABASE_URL="postgresql://postgres:postgres@db:5432/authdb?schema=public"
    #command: "/bin/sh -c 'sleep 10 && bun prisma:seed'"
    command: "/bin/sh -c 'bunx prisma migrate deploy'"
    volumes:
      - api_migration_two:/usr/src/app/prisma/migrations/0_init
    networks:
      default:
        aliases:
          - api
    ports: ["3000:3000"]
    restart: unless-stopped

  db:
    image: postgres:16.3-bullseye
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_NAME=authdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready"]
    #   interval: 1m30s
    #   timeout: 30s
    #   retries: 5
    #   start_period: 30s
    networks:
      default:
        aliases:
          - db
    volumes:
      - pgdata:/var/lib/postgresql/data
      - api_migration_two:/docker-entrypoint-initdb.d:ro  # Mount SQL migrations directory as Read-only

  pgadmin:
    image: dpage/pgadmin4:8.8
    # container_name: pgadmin
    restart: unless-stopped
    depends_on:
      - db
    environment:
      - PGADMIN_DEFAULT_EMAIL=root@root.com
      - PGADMIN_DEFAULT_PASSWORD=root
    ports:
      - "80:80"
    networks:
      default:
        aliases:
          - pgadmin
    volumes:
      - pgadmin_data:/var/lib/pgadmin

# networks:
#   api_net:
#     driver: bridge
#     ipam:
#       config:
#         - subnet: 172.10.0.0/16

volumes:
  api_migration_two:
  pgdata:
  pgadmin_data: