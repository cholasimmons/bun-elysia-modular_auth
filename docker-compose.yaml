name: 'manyumba'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
      # image: cholasimmons/manyumba_zm:latest # simmonsstudiozm/elysia-auth:1 # 
    depends_on:
      - db
    environment:
      - NODE_ENV=development
      - PORT=3000
      - HOST=0.0.0.0
      - TZ="Africa/Lusaka"
      - JWSCRT=simplytestingelysiasjwt
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_HOST=172.10.0.3
      - DATABASE_PORT=5432
      - DATABASE_NAME=authdb
      - DATABASE_URL="postgresql://postgres:postgres@172.10.0.3:5432/authdb?schema=public"
      # - DATABASE_URL="postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}?schema=public"
    networks:
      api_net:
        ipv4_address: 172.10.0.2
    ports:
      - "3000:3000"
    restart: unless-stopped

  db:
    image: postgres:16.3-bullseye
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=authdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready"]
    #   interval: 1m30s
    #   timeout: 30s
    #   retries: 5
    #   start_period: 30s
    networks:
      api_net:
        ipv4_address: 172.10.0.3
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma/migrations/0_init:/docker-entrypoint-initdb.d  # Mount SQL migrations directory

  pgadmin:
    image: dpage/pgadmin4:8.8
    # container_name: pgadmin
    restart: unless-stopped
    depends_on:
      - db
    environment:
      - PGADMIN_DEFAULT_EMAIL=root@root.com
      - PGADMIN_DEFAULT_PASSWORD=root
    ports:
      - "80:8080"
    networks:
      api_net:
        ipv4_address: 172.10.0.5
    volumes:
      - pgadmin_data:/var/lib/pgadmin

networks:
  api_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.10.0.0/16

volumes:
  postgres_data:
  pgadmin_data: